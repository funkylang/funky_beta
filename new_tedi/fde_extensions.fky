#
  Copyright (C) 2024 by
  Dipl.-Ing. Michael Niederle

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License, version 2, or
  (at your option) version 3.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU General Public License for more details.

  For details of the GNU General Public License see the accompanying
  files GPLv2.txt and GLPv3.txt or
  http://www.gnu.org/licenses/gpl-2.0.html
  http://www.gnu.org/licenses/gpl-3.0.html
  or write to the
  Free Software Foundation, Inc.,
  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

<using std-2.0>
<using tedi>
<using fde>

$symbol_plugin std_types::object

$symbol_plugin/initialize: (_id io)
  $filename
    append
      installation_prefix()
      "/share/funky-" package_version()
      "/html/all_symbols.txt"
  log &io "
    loading symbols from "@(filename)"
  load io LOAD_SYMBOLS filename

$LOAD_SYMBOLS .

$LOAD_SYMBOLS/job_completed: (_self io state buf _context)
  $lines split_into_lines(buf)
  $symbols empty_hash_table
  for_each lines
    : (line)
      $name line .before. ' '
      $kind range(line .behind. ' ' 1 -2)
      !symbols(name) kind
      next
    -> io state(.symbols_of symbols)

$LOAD_SYMBOLS/job_failed: (_self io state _buf _context)
  log &io "failed to load symbols"
  log &io "exiting"
  exit &io EXIT_FAILURE
  -> io state

$fde::symbols_of ()

$tedi_types::state.symbols_of undefined

# Initialization

!tedi::functions("context_help") tuple(context_help IO)
!double_click_action context_help

push &plugins symbol_plugin

$fde::context_help: (io state x y lines _info)
  $symbols symbols_of(state)
  if
    symbols.is_defined:
      $identifier get_identifier_at_xy(x y lines)
      if
	identifier.is_defined:
	  $used_namespaces list("std")
	  for_each used_namespaces
	    : (namespace)
	      $symbol append(namespace "::" identifier)
	      if
		symbols(symbol).is_undefined
		next
		:
		  $filename "html/symbols/@(namespace)__@(identifier).html"
		  load &io LOAD_HELP filename undefined tuple(filename undefined)
		    # tuple(filename id): id == undefined -> open in new window
		  -> io state
	    :
	      show_error_message &state "
		No help available for "@(identifier)"!
	      -> io state
	-> io state
    :
      show_error_message &state "
	No symbol information available!
      -> io state

# Helpers

$get_identifier_at_xy: (x y lines)
  $line lines(y)
  if
    line.is_undefined
    -> undefined
    :
      $text text_of(line)
      $indent indent_of(line)
      if
	x <= indent || x > indent+width_of(text)
	-> undefined
	:
	  $pos get_position(text x-indent)
	  $chr text(pos)
	  if
	    chr.is_a_letter || chr.is_a_digit || chr == '_':
	      $start pos
	      $end pos
	      loop:
		if
		  &&
		    start > 1
		    ||
		      text(start-1).is_a_letter
		      text(start-1).is_a_digit
		      text(start-1) == '_'
		  :
		    dec &start
		    next
		  :
		    loop:
		      if
			&&
			  end < length_of(text)
			  ||
			    text(end+1).is_a_letter
			    text(end+1).is_a_digit
			    text(end+1) == '_'
			:
			  inc &end
			  next
			-> range(text start end)
	    -> undefined
