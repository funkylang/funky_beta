#
  Copyright (C) 2024 by
  Dipl.-Ing. Michael Niederle

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License, version 2, or
  (at your option) version 3.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU General Public License for more details.

  For details of the GNU General Public License see the accompanying
  files GPLv2.txt and GLPv3.txt or
  http://www.gnu.org/licenses/gpl-2.0.html
  http://www.gnu.org/licenses/gpl-3.0.html
  or write to the
  Free Software Foundation, Inc.,
  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

# Topic: Input-Output Events, Terminal

$std::PASTE_STRING .

$PASTE_THRESHOLD 16 # when pasting text newlines are treated in a special way

$std::create_terminal_events:
  (
    io
    fd
    input
  )
  from_utf8 &input
  if
    &&
      length_of(input) > PASTE_THRESHOLD
      input .contains. '@cr;'
      all_of(input is_a_character)
    -> io tuple(PASTE_STRING fd replace_all(input '@cr;' = "@nl;"))
    :
      $events empty_list
      $keys extract_keys(input)
      for_each keys
	: (key)
	  if
	    key.is_a_tuple:
	      key $t $x $y $button
	      case t
		MOUSE_CLICK:
		  case button
		    64: # mouse wheel up
		      push &events tuple(KEY_PRESS fd CURSOR_UP)
		      next
		    65: # mouse wheel down
		      push &events tuple(KEY_PRESS fd CURSOR_DOWN)
		      next
		    :
		      push &events tuple(MOUSE_CLICK fd tuple(x y button))
		      next
		MOUSE_RELEASE:
		  push &events tuple(MOUSE_RELEASE fd tuple(x y button))
		  next
		NEW_WINDOW_SIZE:
		  push &events tuple(NEW_WINDOW_SIZE fd tuple(x y))
		  next
		next # ignore unknown event
	    :
	      push &events tuple(KEY_PRESS fd key)
	      next
	-> io events

$is_a_character: (chr)
  -> chr == '@cr;' || chr >= ' '
