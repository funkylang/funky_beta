#
  Copyright (C) 2024 by
  Dipl.-Ing. Michael Niederle

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License, version 2, or
  (at your option) version 3.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU General Public License for more details.

  For details of the GNU General Public License see the accompanying
  files GPLv2.txt and GLPv3.txt or
  http://www.gnu.org/licenses/gpl-2.0.html
  http://www.gnu.org/licenses/gpl-3.0.html
  or write to the
  Free Software Foundation, Inc.,
  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

# Topic: Terminal

$std::edit ()

$std_types::string/edit:
  (
    text # the text to edit
    cursor_position #  1 .. length_of(text)+1
    key # the pressed key
  )
  update_if key == RETURN &key -> '@nl;'
  case key
    CURSOR_LEFT:
      if
	cursor_position > 1
	-> text cursor_position-1
	-> text cursor_position
    CURSOR_RIGHT:
      if
	cursor_position <= length_of(text)
	-> text cursor_position+1
	-> text cursor_position
    HOME:
      -> text find_line_start(text cursor_position)
    END:
      -> text find_line_end(text cursor_position)
    BACKSPACE:
      if
	cursor_position > 1
	->
	  append
	    range(text 1 cursor_position-2)
	    range(text cursor_position -1)
	  cursor_position-1
	-> text cursor_position
    DELETE:
      if
	cursor_position <= length_of(text)
	->
	  append
	    range(text 1 cursor_position-1)
	    range(text cursor_position+1 -1)
	  cursor_position
	-> text cursor_position
    CTRL_BACKSPACE: # delete all the text left of the cursor
      -> range(text cursor_position -1) 1
    CTRL_DELETE: # delete all the text right of the cursor
      -> range(text 1 cursor_position-1) cursor_position
    CTRL_K: # delete all the text
      -> "" 1
    :
      if
	key.is_a_character
	->
	  string
	    range(text 1 cursor_position-1)
	    key
	    range(text cursor_position -1)
	  cursor_position+1
	-> text cursor_position

$find_line_start: (text pos)
  loop:
    if
      pos <= 1
      -> pos
      :
	if
	  text(pos-1) == '@nl;'
	  -> pos
	  :
	    dec &pos
	    next

$find_line_end: (text pos)
  $len length_of(text)
  loop:
    if
      pos > len
      -> pos
      :
	if
	  text(pos) == '@nl;'
	  -> pos
	  :
	    inc &pos
	    next
