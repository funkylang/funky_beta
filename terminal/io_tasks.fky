#
  Copyright (C) 2022 by
  Dipl.-Ing. Michael Niederle

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License, version 2, or
  (at your option) version 3.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU General Public License for more details.

  For details of the GNU General Public License see the accompanying
  files GPLv2.txt and GLPv3.txt or
  http://www.gnu.org/licenses/gpl-2.0.html
  http://www.gnu.org/licenses/gpl-3.0.html
  or write to the
  Free Software Foundation, Inc.,
  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

# Topic: Input-Output Task Manager

$std::TRACK_MOUSE_MOVEMENT .
$std::TRACK_WINDOW_SIZE .
$std::ENABLE_ALL_CTRL_KEYS .

$std::prepare_event_channel ()

$std_types::io_task/prepare_event_channel:
  (
    self
    my_fd
    my_options*
    continuation
  )
  perform_io self initialize tuple(my_fd my_options) continuation

  $initialize: (task io arguments)
    arguments $fd $options
    get_terminal_attributes! fd $original_attributes
    $attributes original_attributes
    use_canonical_mode &attributes false # we want no line-buffering ...
    echo_characters &attributes false # ... and no echoing of typed in characters
    update_if options .contains. ENABLE_ALL_CTRL_KEYS
      &attributes:
	generate_signals &attributes false # we want tctrl-c & ctrl-z
	enable_xon_xoff_for_output &attributes false # we want ctrl-q & ctrl-s
	map_cr_to_lf_on_input &attributes false # we want ctrl-m
	-> attributes
    set_terminal_attributes! $success fd attributes
    if
      success.is_an_error:
	performed_io task io success
      :
	if
	  options .contains. TRACK_WINDOW_SIZE:
	    start_injecting_window_change_events &io
	    enable_mouse_tracking!
	  :
	    enable_mouse_tracking!

    $enable_mouse_tracking:
      if
	options .contains. TRACK_MOUSE_MOVEMENT:
	  write! $_bytes_written STDOUT_FILENO "@esc;[?1003;1006h"
	  install_exit_handler
	install_exit_handler

      $install_exit_handler:
	on_exit &task finalize tuple(fd options original_attributes)
	performed_io task io undefined

  $finalize: (_task io arguments)
    arguments $fd $options $attributes
    if
      options .contains. TRACK_WINDOW_SIZE:
	stop_injecting_window_change_events &io
	disable_mouse_tracking!
      :
	disable_mouse_tracking!

    $disable_mouse_tracking:
      if
	options .contains. TRACK_MOUSE_MOVEMENT:
	  write! STDOUT_FILENO $_bytes_written "@esc;[?1003l"
	  restore_attributes!
	:
	  restore_attributes!

    $restore_attributes:
      set_terminal_attributes! $success fd attributes
      -> io success
