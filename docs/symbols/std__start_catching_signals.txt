# std::start_catching_signals (a polymorphic function)

  starts catching signals

  Parameters:
    self: the object from which to get the clear colour

  Result:
    self: the updated object

  The area is cleared using the current clear colour. Use
  <std::set_clear_colour> to change the current clear colour.

  The area is clipped at the screen's borders.

  Topic: Input-Output Events

  See also: std::stop_catching_signals, std::get_events

  Example:

    $io std_types::io # create an input-output object
    start_catching_signals &io SIGINT SIGTERM
    # now the io object will catch SIGINT and SIGTERM signals
    get_events! &io $events # get one or more events
    for_each events # handle all received events
      : (event)
        event $type $fd $argument # destructure the event
        case type # check the event type
          SIGNAL: # event is a signal event
            case fd # check the signal number
              SIGINT:
                # handle SIGINT signal
                next
              SIGTERM:
                # handle SIGTERM signal
                next
            next # ignore other signal types
          next # ignore all other event types
        next # check for more events

((defined in basic/io/io_events.fky))
((generated by gemma-2-27b-it.Q5_K.gguf))
((2024-07-03 21:07:21))
