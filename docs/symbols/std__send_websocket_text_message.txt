# std::send_websocket_text_message (a function)

  sends a text message to a websocket client

  Parameters:
    io: the I/O-object
    fd: the file descriptor of the websocket client
    text: the text to send

  Result:
    io: the I/O-object

  Topic: Network Clients and Servers

  See also: std::start_web_server, std::stop_web_server,
    std::accept_upgrade_to_websocket, std::http_resource_not_found,
    std::return_http_resource, std::broadcast_websocket_text_message

  Example:

    $io new(std_types::io)
    $server_socket start_tcp_server_socket! 8080 1 true
    start_reading_from &io server_socket
    $client_socket undefined
    loop:
      $events wait_for_events &io
      for_each events
        : (event)
          event $type $fd $argument
          case type
            CONNECT:
              if
                fd == server_socket:
                  $client_socket argument
                  start_reading_from &io client_socket
                  write &io client_socket "
                    HTTP/1.1 101 Switching Protocols@cr;
                    Upgrade: websocket@cr;
                    Connection: Upgrade@cr;
                    Sec-WebSocket-Accept: s3pPLMBiTxaQ9kYGzzhZRbK+xOo=@cr;
                    @cr;
                  next
            READ:
              $message argument
              $first_octet message(1).to_integer
              $second_octet message(2).to_integer
              $opcode first_octet & 0x3f
              $is_masked second_octet & MASK_BIT == MASK_BIT
              $payload_size second_octet & PAYLOAD_MASK
              if
                opcode == TEXT_FRAME && is_masked:
                  $mask map(range(message 1 4) to_integer)
                  $unmasked ""
                  $mask_idx 1
                  $payload range(message 5 4+payload_size)
                  for_each payload
                    : (chr)
                      to_integer &chr
                      push &unmasked character(chr ^ mask(mask_idx))
                      !mask_idx
                        if
                          mask_idx == 4
                          -> 1
                          -> mask_idx+1
                        next
                      next
                    send_websocket_text_message! &io client_socket unmasked
                    next
                next
            CLOSED:
              exit &io EXIT_SUCCESS
              next
            :
              next
          next
        next

((defined in web/server.fky))
((generated by Codestral-22B-v0.1-Q5_K_M.gguf))
((2024-07-03 16:12:12))
