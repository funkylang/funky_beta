# std::if (a polymorphic function)

  classic if; can be used as a function or a procedure

  Parameters:
    condition: true or false
    then_part: the function to be evaluated if the condition is true
    else_part: the function to be evaluated if the condition is false

  Result:
    the result(s) of the then-part or the else-part

  The "then-part"- and "else-part" functions can return any number of results
  (including none). But both should return the same number of results.

  Topic: Boolean

  See also: std::if_not, std::on, std::on_not, std::cond, std::case,
            std::and, std::or, std::default_value

  Example:

    # "if" as a procedure

    $x 5
    if
      x > 3:
        println! "x is larger than 3"
      :
        println! "x is not larger than 3"

  Output:

    x is larger than 3

  Example:

    # "if" as a function

    $x 5
    println!
      if
        x > 3
        -> "x is larger than 3"
        -> "x is not larger than 3"

  Output:

    x is larger than 3

  Example:

    # "if" with multiple results

    $x 5

    if $a $b
      x > 7
      -> x*x x+1
      -> 2*x*x x+3

    print! "
      a = @(a)
      b = @(b)

  Output:

    a = 50
    b = 8

((defined in basic/types/boolean.fky))
((generated by Codestral-22B-v0.1-Q5_K_M.gguf))
((2024-12-17 16:44:05))
