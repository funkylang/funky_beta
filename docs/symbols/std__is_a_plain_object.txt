# std::is_a_plain_object (a polymorphic function)

  checks if an object is a plain object

  Parameter:
    self: the object to check

  Result:
    is_a_plain_object: true if the object is a plain object

  A plain object is an object without any "builtin" attributes;
  numbers, characters, strings, etc. are *no* plain objects.

  Topic: Basics

  See also: std::is_defined, std::is_a_number, std::is_a_string,
            std::is_a_character, std::is_a_tuple, std::is_a_list,
            std::is_a_hash_table, std::is_a_function,
            std::is_a_polymorphic_function, std::is_a_date_and_time,
            std::is_a_terminal_attributes, std::is_a_file_type,
            std::is_a_file_descriptor, std::is_a_shutdown_type,
            std::is_a_seek_type, std::is_a_device_id, std::is_a_directory,
            std::is_a_group_id, std::is_a_inode_number,
            std::is_a_process_id, std::is_a_user_id, std::is_a_error_number,
            std::is_a_shared_memory

  Example:

    is_a_plain_object(123) -> false
    is_a_plain_object("abc") -> false
    is_a_plain_object(true) -> false
    is_a_plain_object(false) -> false
    is_a_plain_object(list(1 2 3)) -> false
    is_a_plain_object(tuple(1 2 3)) -> false
    is_a_plain_object(hash_table("a" 1 "b" 2 "c" 3)) -> false
    is_a_plain_object(function(x y) x+y) -> false
    is_a_plain_object(polymorphic_function(x y) x+y) -> false
    is_a_plain_object(object()) -> true

((defined in basic/types/object.fky))
((generated by Codestral-22B-v0.1-Q5_K_M.gguf))
((2024-12-09 20:47:21))
