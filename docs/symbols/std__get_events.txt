# std::get_events (a polymorphic function)

  retrieves events from the input-output object

  Parameters:
    self: the input-output object

  Result:
    events: a list of events

  The function waits for one or more events to occur and then returns them as a
  list.

  The event types are:

  * READ: a read event
  * READ_FAILED: a read operation failed
  * WRITE_PENDING: a write pending event
  * WRITE_COMPLETED: a write completed event
  * WRITE_FAILED: a write failed event
  * CLOSED: a file descriptor has been closed
  * PROCESS_JOINED: a process has finished
  * SIGNAL: a signal has been received
  * CONNECT: a connection has been established
  * JOB_COMPLETED: a job has completed
  * JOB_FAILED: a job has failed

  Topic: Input-Output Events

  Example:

    $io std_types::io
    open! $fib_fd "examples/fib.fky" "r"
    start_reading_from &io fib_fd
    loop:
      get_events! &io $events
      for_each events
	: (event)
	  event $type $fd $data
	  case type
	    READ:
	      case fd
		fib_fd:
		  write &io STDOUT_FILENO data
		  next!
		next
	    CLOSED:
	      case fd
		fib_fd:
		  exit &io EXIT_SUCCESS
		  next!
		next
	    next
	next

  Output:

    #!/usr/bin/env fkyrun

    $fib: (n)
      if
	n <= 2
	-> 1
	-> fib(n-1)+fib(n-2)

    println! fib(30)

((defined in basic/io/io_events.fky))
((generated by gemma-2-27b-it.Q5_K.gguf))
((revised))
((2024-07-03 21:03:40))
