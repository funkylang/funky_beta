# std_types::list (a builtin type derived from std_types::generic_list)

  an ordered, enumerated sequence of items

  Parameters:
    first: the index of the first item to include in the range
    last: the index of the last item to include in the range
    indices: the indices of the list elements
    value: the new value (only for updates)

  Result:
    value_or_list: the value at the specified position or the updated list

  The first item has the index 1, the second item the index 2 and so on.

  Negative indices start at the end of the list.

  The last item has the index -1, the next to last item the index -s and so
  on.

  Both indices are *inclusive*. So a range starting at index 4 and ending at
  index 5 contains two items.

  A range can be empty. An example for an empty range would be start index
  8 and end index 7.

  It is an error for any index to lie outside the list's index range. It is
  also an error if the resulting range would contain a negative number of
  items.

  If the range spans the whole list then the list is returned unchanged.

  Otherwise a new list (with fresh attributes) is created and returned.

  Topics: Lists, Collections

  See also: std_types::generic_list, std_types::string

  Example:

    $a list(1 2 3)
    println! $a(1)
    println! $a(2)
    println! $a(3)
    println! $a(-1)
    println! $a(-2)
    println! $a(-3)
    println! $a(1 3)
    println! $a(2 2)
    println! $a(1 -1)
    println! $a(1 -2)
    println! $a(1 -3)
    println! $a(2 -1)
    println! $a(2 -2)
    println! $a(2 -3)
    println! $a(3 -1)
    println! $a(3 -2)
    println! $a(3 -3)

  Output:

    1
    2
    3
    3
    2
    1
    list(1 3)
    list(2)
    list(1 2 3)
    list(1 2)
    list(1 2)
    list(2 3)
    list(2)
    list()
    list(3)
    list(3)
    list(3)

((defined in runtime_templates/list.template))
((generated by Codestral-22B-v0.1-Q5_K_M.gguf))
((2024-07-02 17:10:26))
