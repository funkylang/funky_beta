# std::behind (a polymorphic function)

  returns the substring behind the specified expression

  Parameters:
    str: the input string
    expr: the expression to look for
    nth: look for the nth occurrence of *expr* instead for the first one

  Result:
    string: the substring behind the specified expression

  If the string does not contain the expression then the empty string is
  returned.

  An optional third argument can be used to match the *nth* occurence of
  the specified expression. If this value is negative then -1 means the
  last occurrence, -2 means the next-to-last occurence and so on.

  Topic: Collections

  See also: std::truncate_until, std::between, std::before, std::from, std::until

  Example:

    $identifier "std::behind"
    $last_part identifier .behind. '.'
    println! '[' last_part ']'

    Output:

    []

((defined in basic/types/collections/collection.fky))
((generated by gemma-2-27b-it.Q5_K.gguf))
((2024-07-03 21:36:12))
