# std::create_process (a builtin I/O-function)

  creates a new child process

  Parameters:
    filename: the executable image of the new process
    arguments: a list of arguments to supply to the new process
    environment?: a list of environment variables or <undefined>
    stdin?: a file-descriptor to be used as the process' stdin
    stdout?: a file-descriptor to be used as the process' stdout
    stderr?: a file-descriptor to be used as the process' stderr

  Results:
    child_pid: the process id of the new process
    child_stdin?: the file-descriptor to write to the child process' stdin
    child_stdout?: the file-descriptor to read from the child process' stdout
    child_stderr?: the file-descriptor to read from the child process' stderr

  *child_stdin* is returned only if no value was supplied for *stdin*.

  Topic: POSIX

  See also: std::exec, std::wait

  Example:

    # we do not check for errors in this example

    create_process! $pid $in_fd $out_fd $err_fd
      "ls" list("-l" "/usr/local/share/funky-0/runtime/")
    close! in_fd
    loop:
      read! $buf out_fd 0x10000
      if
        buf.is_not_empty:
          write! $_bytes_written STDOUT_FILENO buf
          next!
        :
          close! out_fd
          close! err_fd
          waitpid! $_ret $_status pid
          pass

  Output:

    insgesamt 52
    -rw-r--r-- 1 root root 15955 17. Jän 17:59 builtins.h
    -rw-r--r-- 1 root root  4093 17. Jän 17:59 common.h
    -rw-r--r-- 1 root root  4636 17. Jän 17:59 fko.h
    -rw-r--r-- 1 root root  1015 17. Jän 17:59 interpreter.h
    -rw-r--r-- 1 root root  3557 17. Jän 17:59 linker.h
    -rw-r--r-- 1 root root  7579 17. Jän 17:59 memory.h
    -rw-r--r-- 1 root root   304 17. Jän 17:59 platform.h
    -rw-r--r-- 1 root root  1299 17. Jän 17:59 profiler.h

((defined in runtime_templates/exec.template))
((generated by Codestral-22B-v0.1-Q5_K_M.gguf))
((2024-07-02 11:53:46))
