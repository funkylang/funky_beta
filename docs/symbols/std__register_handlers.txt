# std::register_handlers (a polymorphic function)

  registers event handlers for a given id

  Parameters:
    self: the input-output object
    id: the id of the handler set
    type_handlers: a list of tuples, each containing the event type and the
      corresponding handler function

  Result:
    self: the updated input-output object

  The handler function will be called when an event of the specified type
  occurs. The handler function will receive the event object as its only
  argument.

  Example:

    $io std_types::io # create an input-output object
    register_handlers &io "my_handlers"
      tuple(READ (event) -> print! "Read event:", event)
      tuple(WRITE_COMPLETED (event) -> print! "Write completed event:", event)

  Topic: Input-Output Events

  See also: std::deregister_handlers, std::deregister_all_handlers


((defined in basic/io/io_events.fky))
((generated by gemma-2-27b-it.Q5_K.gguf))
((2024-07-03 21:09:14))
