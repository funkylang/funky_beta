# std_types::string/std::behind (a method)

  returns the substring behind the specified expression

  Parameters:
    self: the input string
    expr: the expression to look for
    nth: look for the nth occurrence of *expr* instead for the first one

  Result:
    string: the substring behind the expression

  If the specified expression is found within the string the substring
  behind the expression is returned. Otherwise the empty string is returned.

  If *nth* is specified then the nth occurence of the expression *expr*
  is looked for. If there are not at least *n* matches for *expr* within *str*
  then the empty string is returned.

  A very similar function is <string/truncate_until>. It behaves differently
  only when the expression is *not* found.

  Topic: Strings

  See also: std_types::string/std::truncate_until,
            std_types::string/std::before,
            std_types::string/std::between,
            std_types::string/std::until

  Example:

    $identifier "std::behind"
    $name identifier .behind. "::"
    println! name

  Output:

    behind

  Example:

    $identifier "std::behind"
    $last_part identifier .behind. '.'
    println! '[' last_part ']'

  Output:

    []

((defined in basic/types/collections/strings/string.fky))
((generated by Codestral-22B-v0.1-Q5_K_M.gguf))
((2024-07-02 22:19:45))
