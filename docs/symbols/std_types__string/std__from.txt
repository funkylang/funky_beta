# std_types::string/std::from (a method)

  returns the substring starting with the specified expression

  Parameters:
    self: the input string
    expr: the expression to look for
    nth: look for the nth occurrence of *expr* instead for the first one

  Result:
    substring: the substring starting with the expression

  If the specified expression is found within the string the substring
  starting with the expression is returned. Otherwise the empty string is
  returned.

  If *nth* is specified then the nth occurence of the expression *expr* is
  looked for. If there are not at least *n* matches for *expr* within *str*
  then the empty string is returned.

  A very similar function is <string/truncate_before>. It behaves differently
  only when the expression is *not* found.

  Topic: Strings

  See also: string/truncate_before, string/between, string/until, string/until

  Example:

    $identifier "std::from"
    $last_part identifier .from. "::"
    println! last_part

  Output:

    ::from

  Example:

    $identifier "std::from"
    $first_part identifier .from. '.'
    println! '[' first_part ']'

  Output:

    []

((defined in basic/types/collections/strings/string.fky))
((generated by Codestral-22B-v0.1-Q5_K_M.gguf))
((2024-07-02 22:20:53))
