# std_types::string/std::before (a method)

  returns the substring before the specified expression

  Parameters:
    self: the input string
    expr: the expression to look for
    nth: look for the nth occurrence of *expr* instead for the first one

  Result:
    string: the substring before the expression

  If the specified expression is found within the string the substring
  before the expression is returned. Otherwise the empty string is returned.

  If *nth* is specified then the nth occurence of the expression *expr*
  is looked for. If there are not at least *n* matches for *expr* within *str*
  then the empty string is returned.

  A very similar function is <string/truncate_from>. It behaves differently
  only when the expression is *not* found.

  Topic: Strings

  See also: std_types::string/std::truncate_from,
            std_types::string/std::behind,
            std_types::string/std::between,
            std_types::string/std::until

  Example:

    $identifier "std::before"
    $namespace identifier .before. "::"
    println! namespace

  Output:

    std

  Example:

    $identifier "std::before"
    $first_part identifier .before. '.'
    println! '[' first_part ']'

  Output:

    []

((defined in basic/types/collections/strings/string.fky))
((generated by Codestral-22B-v0.1-Q5_K_M.gguf))
((2024-07-02 22:18:38))
