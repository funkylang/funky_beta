# std_types::io/std::schedule (a method)

  schedules a function to be called at a specified time

  Parameters:
    io: the input-output object
    time: the time at which the function is to be called
    function: the function to call
    data: the data to pass to the function

  Results:
    io: the updated input-output object
    job_no: the job number (if requested)

  The function is called with the input-output object and the data as
  arguments.

  If the function returns an error object then the error is printed to the
  standard error stream.

  If the function returns a value then the value is ignored.

  If the function returns two values then the first value is ignored and the
  second value is used as the new input-output object.

  If the function returns three values then the first value is ignored, the
  second value is used as the new input-output object and the third value is
  ignored.

  If the function returns four values then the first value is ignored, the
  second value is used as the new input-output object, the third value is
  ignored and the fourth value is used as the new data.

  If the function returns five values then the first value is ignored, the
  second value is used as the new input-output object, the third value is
  ignored, the fourth value is used as the new data and the fifth value is
  ignored.

  If the function returns six values then the first value is ignored, the
  second value is used as the new input-output object, the third value is
  ignored, the fourth value is used as the new data, the fifth value is
  ignored and the sixth value is used as the new function.

  If the function returns seven values then the first value is ignored, the
  second value is used as the new input-output object, the third value is
  ignored, the fourth value is used as the new data, the fifth value is
  ignored, the sixth value is used as the new function and the seventh value
  is ignored.

  If the function returns eight values then the first value is ignored, the
  second value is used as the new input-output object, the third value is
  ignored, the fourth value is used as the new data, the fifth value is
  ignored, the sixth value is used as the new function, the seventh value is
  ignored and the eighth value is used as the new time.

  If the function returns nine values then the first value is ignored, the
  second value is used as the new input-output object, the third value is
  ignored, the fourth value is used as the new data, the fifth value is
  ignored, the sixth value is used as the new function, the seventh value is
  ignored, the eighth value is used as the new time and the ninth value is
  ignored.

  If the function returns ten values then the first value is ignored, the
  second value is used as the new input-output object, the third value is
  ignored, the fourth value is used as the new data, the fifth value is
  ignored, the sixth value is used as the new function, the seventh value is
  ignored, the eighth value is used as the new time, the ninth value is
  ignored and the tenth value is used as the new job number.

  If the function returns more than ten values then the first value is
  ignored, the second value is used as the new input-output object, the third
  value is ignored, the fourth value is used as the new data, the fifth value
  is ignored, the sixth value is used as the new function, the seventh value
  is ignored, the eighth value is used as the new time, the ninth value is
  ignored, the tenth value is used as the new job number and the remaining
  values are ignored.

  If the function returns an error object then the error is printed to the
  standard error stream.

  If the function returns a value then the value is ignored.

  If the function returns two values then the first value is ignored and the
  second value is used as the new input-output object.

  If the function returns three values then the first value is ignored, the
  second value is used as the new input-output object and the third value is
  ignored.

  If the function returns four values then the first value is ignored, the
  second value is used as the new input-output object, the third value is
  ignored and the fourth value is used as the new data.

  If the function returns five values then the first value is ignored, the
  second value is used as the new input-output object, the third value is
  ignored, the fourth value is used as the new data and the fifth value is
  ignored.

  If the function returns six values then the first value is ignored, the
  second value is used as the new input-output object, the third value is
  ignored, the fourth value is used as the new data, the fifth value is
  ignored and the sixth value is used as the new function.

  If the function returns seven values then the first value is ignored, the
  second value is used as the new input-output object, the third value is
  ignored, the fourth value is used as the new data, the fifth value is
  ignored, the sixth value is used as the new function and the seventh value
  is ignored.

  If the function returns eight values then the first value is ignored, the
  second value is used as the new input-output object, the third value is
  ignored, the fourth value is used as the new data, the fifth value is
  ignored, the sixth value is used as the new function, the seventh value is
  ignored and the eighth value is used as the new time.

  If the function returns nine values then the first value is ignored, the
  second value is used as the new input-output object, the third value is
  ignored, the fourth value is used as the new data, the fifth value is
  ignored, the sixth value is used as the new function, the seventh value is
  ignored, the eighth value is used as the new time and the ninth value is
  ignored.

  If the function returns ten values then the first value is ignored, the
  second value is used as the new input-output object, the third value is
  ignored, the fourth value is used as the new data,
STOPPED

((defined in basic/io/jobs.fky))
((generated by Codestral-22B-v0.1-Q5_K_M.gguf))
((2024-07-02 20:05:50))
