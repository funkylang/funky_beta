# std_types::io/std::save (a method)

  saves a file asynchronously

  Parameters:
    io: the I/O-object
    id: a caller supplied id to identify the I/O-job
    filename: the name of the file to save
    data: the data to save
    context: caller supplied context for the I/O-job (optional)

  Result:
    the updated I/O-object

  This function adds a job for saving a file to the I/O-object. The job is
  executed asynchronously within <std::get_events>.

  When the file has been saved successfully, a <std::JOB_COMPLETED>-event is
  generated.

  If the file cannot be saved, a <std::JOB_FAILED>-event is generated.

  Topics: Input-Output Jobs, Input-Output Events

  See also: std_types::io/std::load,
	    std::get_events, std::JOB_COMPLETED, std::JOB_FAILED

  Example:

    #!/usr/bin/env fkyrun

    $SAVE_DATA .

    $io std_types::io
    save &io SAVE_DATA "/tmp/test.dat" "
      This is
      some text.
    loop:
      get_events! &io $events
      handle_events &io &events
      for_each events
	: (event)
	  event $type $id $_data $context
	  case type
	    JOB_COMPLETED:
	      case id
		SAVE_DATA:
		  write &io STDOUT_FILENO "
		    saved data to "@(context)"
		  exit &io EXIT_SUCCESS
		  next!
		next
	    JOB_FAILED:
	      Error! "
		Failed to save data to "@(context)"!
	    next
	next

  Output:

    saved data to "/tmp/test.dat"

((defined in basic/io/io.fky))
((generated manually))
((2025-05-05))
