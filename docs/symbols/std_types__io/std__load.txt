# std_types::io/std::load (a method)

  loads a file asynchronously

  Parameters:
    io: the I/O-object
    id: a caller supplied id to identify the I/O-job
    filename: the name of the file to load
    max_length: the maximum number of bytes to load (default: all)
    context: caller supplied context for the I/O-job (default: filename)

  Result:
    the updated I/O-object

  This function adds a job for loading a file to the I/O-object. The job is
  executed asynchronously within <std::get_events>.

  When the file has been loaded successfully, a <std::JOB_COMPLETED>-event is
  generated.

  If the file cannot be loaded, a <std::JOB_FAILED>-event is generated.

  Topics: Input-Output Jobs, Input-Output Events

  See also: std_types::io/std::save,
	    std::get_events, std::JOB_COMPLETED, std::JOB_FAILED

  Example:

    $GPL .

    $io std_types::io
    load &io GPL "GPLv2.txt"
    loop:

      get_events! &io $events
      handle_events &io &events
      for_each events
	: (event)
	  event $type $id $data $context
	  case type
	    JOB_COMPLETED:
	      case id
		GPL:
		  write &io STDOUT_FILENO until(data '@nl;' 5)
		  next!
		next
	    JOB_FAILED:
	      Error! "
		Failed to load file "@(context)"!
	    WRITE_COMPLETED:
	      exit &io EXIT_SUCCESS
	      next!
	    next
	next

  Output:

			GNU GENERAL PUBLIC LICENSE
			   Version 2, June 1991

     Copyright (C) 1989, 1991 Free Software Foundation, Inc.,
     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

((defined in basic/io/io.fky))
((generated manually))
((2025-05-05))
