# std::reduce (a polymorphic function)

  compute a kind of sum from the items of a collection

  There is no guarantee in which order the values will be reduced (folded).

  So the the reduction function must obey to the law of assosiativity!

  Parameters:
    self: the collection to build the "sum" from
    function: the function to apply to pairs of values
    unit: the value to return for empty collections

  Result:
    a single value

  The function applications might be executed in parallel!

  Topic: Collections

  See also: std::map, std::map_reduce, std::filter

  Example:

    $my_list create_list(1 2 3 4 5)
    std::reduce my_list plus

    # This will return 15

((defined in basic/types/collections/collection.fky))
((generated by gemma-2-27b-it.Q5_K.gguf))
((2024-07-03 21:30:34))
