# std::from_to_by (an I/O-function)

  a loop iterating over a sequence of values

  The starting value is incremented by the given step after each invocation
  of *body*.

  The type of the first and last value need not be integers but can be of
  arbitrary types that support adding the given step value.

  The loop terminates as soon as the current value is greater than *last*.
  (The *body* will only be called for values that are less than or equal to
  *last*.)

  If *first* is greater than *last* then the loop body will *not* be called at
  all!

  The *body* is called with a single argument (the current value).

  To start the next iteration of the loop a tail call to the *next*-function
  has to be performed.

  To exit from the loop a tail call to the *break*-function has to be
  performed or one or more results have to be returned.

  Topic: Loops

  See also: std::loop, std::while, std::while_not, std::repeat, std::from_to

  Example:

    from_to_by 1 10 2
      : (i)
	println! i " x " i " = " i*i
	next!
      pass

  Output:

    1 x 1 = 1
    3 x 3 = 9
    5 x 5 = 25
    7 x 7 = 49
    9 x 9 = 81

((defined in basic/loops.fky))
((generated by Codestral-22B-v0.1-Q5_K_M.gguf))
((revised))
((2024-07-13 19:13:43))
