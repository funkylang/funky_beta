# std::before (a polymorphic function)

  returns the substring before the specified expression

  Parameters:
    str: the input string
    expr: the expression to look for
    nth: look for the nth occurrence of *expr* instead for the first one

  Result:
    string: the substring before the specified expression

  If the string specified as the first argument contains the expression
  specified as the second argument, the substring before the first match of
  the expression is returned.

  If the string does not contain the expression then the empty string is
  returned.

  An optional third argument can be used to match the *nth* occurrence of
  the specified expression. If this value is negative then -1 means the
  last occurrence, -2 means the next-to-last occurrence and so on.

  Topic: Collections

  See also: std::truncate_from, std::between, std::behind, std::from, std::until

  Example:

    $identifier "std::before"
    $namespace identifier .before. "::"
    println! namespace

    Output:

      std

  Example:

    $identifier "std::before"
    $first_part identifier .before. '.'
    println! '[' first_part ']'

    Output:

      []

((defined in basic/types/collections/collection.fky))
((generated by gemma-2-27b-it.Q5_K.gguf))
((2024-07-03 21:35:16))
