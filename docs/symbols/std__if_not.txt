# std::if_not (a polymorphic function)

  can be used as a function or a procedure

  Parameters:
    condition # true or false
    then_part # the function to be evaluated if the condition is not true
    else_part # the function to be evaluated if the condition is true

  The "then-part"- and "else-part" functions can return any number of results
  (including none). But both should return the same number of results.

  *if_not* is usually used with a simple then-part and a complex else-part.

  Topic: Branches

  See also: if, cond, case, and, or, default_value

  Example:

    # "if_not" as a procedure

    $x 5
    if_not
      x > 3:
        println! "x is not larger than 3"
      :
        println! "x is larger than 3"

  Output:

    x is larger than 3

  Example:

    # "if_not" as a function

    $x 5
    println!
      if_not
        x > 3
        -> "x is not larger than 3"
        -> "x is larger than 3"

  Output:

    x is larger than 3


((defined in basic/types/boolean.fky))
((generated by gemma-2-27b-it-Q5_K_M.gguf))
((2024-07-03 22:25:47))
