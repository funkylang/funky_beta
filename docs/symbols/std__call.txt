# std::call (an I/O-function)

  calls the specified command with the specified arguments

  Parameters:
    cmd: the command to call
    args: the arguments to pass to the command

  Results:
    the command's exit status
    the command's standard output (if requested)
    the command's standard error output (if requested)

  **Attention**: This function must be called with I/O-access rights!

  The function calls the specified command with the specified arguments.

  The command's standard input is closed.

  The command's standard output and standard error output are read and
  returned as strings.

  If the command's standard output and standard error output are not
  requested then they are written to the standard output and standard error
  output of the calling process.

  Topic: POSIX

  See also: std::pipe, std::pipe_commands, std::which, std::find_first_process,
  std::find_processes, std::get_process_name, std::extern

  Example:

    call! $ret $out $err "ls" list("-l" "-a")
    println! "Exit status: @(ret)"
    println! "Standard output:"
    println! out
    println! "Standard error output:"
    println! err

  Output:

    Exit status: 0
    Standard output:
    total 16
    drwxr-xr-x 2 user group 4096 2016-01-01 12:00 .
    drwxr-xr-x 3 user group 4096 2016-01-01 12:00 ..
    -rw-r--r-- 1 user group    0 2016-01-01 12:00 file
    Standard error output:

((defined in basic/io/io.fky))
((generated by Codestral-22B-v0.1-Q5_K_M.gguf))
((2024-07-02 19:43:10))
